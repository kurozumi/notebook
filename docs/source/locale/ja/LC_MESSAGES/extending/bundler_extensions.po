# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Jupyter Team, https://jupyter.org
# This file is distributed under the same license as the Jupyter Notebook
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Jupyter Notebook 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-24 20:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/extending/bundler_extensions.rst:2
msgid "Custom bundler extensions"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:4
msgid ""
"The notebook server supports the writing of *bundler extensions* that "
"transform, package, and download/deploy notebook files. As a developer, "
"you need only write a single Python function to implement a bundler. The "
"notebook server automatically generates a *File -> Download as* or *File "
"-> Deploy as* menu item in the notebook front-end to trigger your "
"bundler."
msgstr ""

#: ../../source/extending/bundler_extensions.rst:10
msgid "Here are some examples of what you can implement using bundler extensions:"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:12
msgid ""
"Convert a notebook file to a HTML document and publish it as a post on a "
"blog site"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:14
msgid ""
"Create a snapshot of the current notebook environment and bundle that "
"definition plus notebook into a zip download"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:16
msgid ""
"Deploy a notebook as a standalone, interactive `dashboard "
"<https://github.com/jupyter-incubator/dashboards_bundlers>`_"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:18
msgid "To implement a bundler extension, you must do all of the following:"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:20
msgid "Declare bundler extension metadata in your Python package"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:21
msgid "Write a `bundle` function that responds to bundle requests"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:22
msgid "Instruct your users on how to enable/disable your bundler extension"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:24
msgid "The following sections describe these steps in detail."
msgstr ""

#: ../../source/extending/bundler_extensions.rst:27
msgid "Declaring bundler metadata"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:29
msgid ""
"You must provide information about the bundler extension(s) your package "
"provides by implementing a `_jupyter_bundlerextensions_paths` function. "
"This function can reside anywhere in your package so long as it can be "
"imported when enabling the bundler extension. (See :ref:`enabling-"
"bundlers`.)"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:47
msgid ""
"Note that the return value is a list. By returning multiple dictionaries "
"in the list, you allow users to enable/disable sets of bundlers all at "
"once."
msgstr ""

#: ../../source/extending/bundler_extensions.rst:51
msgid "Writing the `bundle` function"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:53
msgid ""
"At runtime, a menu item with the given label appears either in the *File "
"->  Deploy as* or *File -> Download as* menu depending on the `group` "
"value in your metadata. When a user clicks the menu item, a new browser "
"tab opens and notebook server invokes a `bundle` function in the "
"`module_name` specified in the metadata."
msgstr ""

#: ../../source/extending/bundler_extensions.rst:59
msgid ""
"You must implement a `bundle` function that matches the signature of the "
"following example:"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:84
msgid ""
"Your `bundle` function is free to do whatever it wants with the request "
"and respond in any manner. For example, it may read additional query "
"parameters from the request, issue a redirect to another site, run a "
"local process (e.g., `nbconvert`), make a HTTP request to another "
"service, etc."
msgstr ""

#: ../../source/extending/bundler_extensions.rst:89
msgid ""
"The caller of the `bundle` function is `@tornado.gen.coroutine` decorated"
" and wraps its call with `torando.gen.maybe_future`. This behavior means "
"you may handle the web request synchronously, as in the example above, or"
" asynchronously using `@tornado.gen.coroutine` and `yield`, as in the "
"example below."
msgstr ""

#: ../../source/extending/bundler_extensions.rst:107
msgid ""
"You should prefer the second, asynchronous approach when your bundle "
"operation is long-running and would otherwise block the notebook server "
"main loop if handled synchronously."
msgstr ""

#: ../../source/extending/bundler_extensions.rst:111
msgid ""
"For more details about the data flow from menu item click to bundle "
"function invocation, see :ref:`bundler-details`."
msgstr ""

#: ../../source/extending/bundler_extensions.rst:117
msgid "Enabling/disabling bundler extensions"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:119
msgid ""
"The notebook server includes a command line interface (CLI) for enabling "
"and disabling bundler extensions."
msgstr ""

#: ../../source/extending/bundler_extensions.rst:122
msgid ""
"You should document the basic commands for enabling and disabling your "
"bundler. One possible command for enabling the `hello_bundler` example is"
" the following:"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:130
msgid ""
"The above updates the notebook configuration file in the current "
"conda/virtualenv environment (`--sys-prefix`) with the metadata returned "
"by the `mypackage.hellow_bundler._jupyter_bundlerextension_paths` "
"function."
msgstr ""

#: ../../source/extending/bundler_extensions.rst:134
msgid ""
"The corresponding command to later disable the bundler extension is the "
"following:"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:141
msgid "For more help using the `bundlerextension` subcommand, run the following."
msgstr ""

#: ../../source/extending/bundler_extensions.rst:147
msgid ""
"The output describes options for listing enabled bundlers, configuring "
"bundlers for single users, configuring bundlers system-wide, etc."
msgstr ""

#: ../../source/extending/bundler_extensions.rst:151
msgid "Example: IPython Notebook bundle (.zip)"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:153
msgid ""
"The `hello_bundler` example in this documentation is simplisitic in the "
"name of brevity. For more meaningful examples, see "
"`notebook/bundler/zip_bundler.py` and "
"`notebook/bundler/tarball_bundler.py`. You can enable them to try them "
"like so:"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:166
msgid "Bundler invocation details"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:168
msgid ""
"Support for bundler extensions comes from Python modules in "
"`notebook/bundler` and JavaScript in "
"`notebook/static/notebook/js/menubar.js`. The flow of data between the "
"various components proceeds roughly as follows:"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:172
msgid "User opens a notebook document"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:173
msgid "Notebook front-end JavaScript loads notebook configuration"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:174
msgid ""
"Bundler front-end JS creates menu items for all bundler extensions in the"
" config"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:176
msgid "User clicks a bundler menu item"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:177
msgid ""
"JS click handler opens a new browser window/tab to `<notebook "
"base_url>/bundle/<path/to/notebook>?bundler=<name>` (i.e., a HTTP GET "
"request)"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:180
msgid "Bundle handler validates the notebook path and bundler `name`"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:181
msgid ""
"Bundle handler delegates the request to the `bundle` function in the "
"bundler's `module_name`"
msgstr ""

#: ../../source/extending/bundler_extensions.rst:183
msgid "`bundle` function finishes the HTTP request"
msgstr ""

